name: Checks and tests

on:
  pull_request:
    branches: [dev]

env:
  APP_MONGO_USER: test
  APP_MONGO_PASS: password
  APP_MONGO_DB: test
  MONGODB_URI: mongodb://test:password@localhost:27017/test

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: ${APP_MONGO_USER}
          MONGO_INITDB_ROOT_PASSWORD: ${APP_MONGO_PASS}
          MONGO_INITDB_DATABASE: ${APP_MONGO_DB}
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Check encoding
        run: |
          OIFS="$IFS"
          IFS=$'\n'
          FAILURE_FILES=''
          RETURN_CODE=0
          FILES=`find ./src -name '*.*'`
          FILES="$FILES"$'\n'"./pom.xml"
          for f in $FILES
          do
            echo Check $f
            file -bi $f | grep -iE 'charset=(utf-8)|(us-ascii)' > /dev/null || FAILURE_FILES="$FAILURE_FILES"$'\n'"$f"
          done
          for f in $FAILURE_FILES
          do
            printf [ER
            echo ROR] $f
            RETURN_CODE=-1
          done
          IFS=$OIFS
          exit $RETURN_CODE
      - name: Check line separators
        run: |
          OIFS="$IFS"
          IFS=$'\n'
          FAILURE_FILES=''
          RETURN_CODE=0
          FILES=`find ./src -name '*.*'`
          FILES="$FILES"$'\n'"./pom.xml"
          for f in $FILES
          do
            echo Check $f
            cat -e $f | grep -E '\^M\$?$' > /dev/null && FAILURE_FILES="$FAILURE_FILES"$'\n'"$f"
          done
          for f in $FAILURE_FILES
          do
            printf [ER
            echo ROR] $f
            RETURN_CODE=-1
          done
          IFS=$OIFS
          exit $RETURN_CODE
      - name: Check codestyle
        run: mvn checkstyle:check
      - name: Build jar
        run: mvn package -Dmaven.test.skip
      - name: Run tests
        run: mvn test
